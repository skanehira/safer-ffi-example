/*! \file */
/*******************************************
 *                                         *
 *  File auto-generated by `::safer_ffi`.  *
 *                                         *
 *  Do not manually edit this file.        *
 *                                         *
 *******************************************/

#ifndef __RUST_SAFER_FFI_EXAMPLE__
#define __RUST_SAFER_FFI_EXAMPLE__
#ifdef __cplusplus
extern "C" {
#endif


#include <stddef.h>
#include <stdint.h>

/** \brief
 *  Same as [`Vec<T>`][`rust::Vec`], but with guaranteed `#[repr(C)]` layout
 */
typedef struct Vec_int32 {
    /** <No documentation available> */
    int32_t * ptr;

    /** <No documentation available> */
    size_t len;

    /** <No documentation available> */
    size_t cap;
} Vec_int32_t;

/** <No documentation available> */
typedef struct App {
    /** <No documentation available> */
    Vec_int32_t todos;
} App_t;

/** <No documentation available> */
void
add_todo (
    App_t * app,
    int32_t value);

/** <No documentation available> */
void
app_free (
    App_t * _app);

/** <No documentation available> */
App_t *
app_new (void);

/** <No documentation available> */
int32_t
get_todo_at (
    App_t const * app,
    size_t index);

/** <No documentation available> */
size_t
get_todo_count (
    App_t const * app);


#ifdef __cplusplus
} /* extern \"C\" */
#endif

#endif /* __RUST_SAFER_FFI_EXAMPLE__ */
